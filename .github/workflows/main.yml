name: CI

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    name: (build stencil ${{ matrix.stencil_version }})
    strategy:
      matrix:
        # Run two different versions in parallel:
        # 1. DEFAULT - uses the version of Stencil written in `package-lock.json`, keeping the same version used by the
        # Stencil team as a source of truth
        # 2. 2 - will install the latest release under major version 2 of Stencil. This should be kept as long as this
        # library supports Stencil v2.Y.Z
        stencil_version: ['DEFAULT', '2']

    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@24cb9080177205b6e8c946b17badbe402adc938f
      with:
        persist-credentials: false
    - name: Use Node from Volta
      uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c
      with:
        node-version-file: 'package.json'
        cache: 'npm'
    - name: Install Dependencies
      run: npm ci
      shell: bash
    - name: Prettier Check
      run: npm run prettier.dry-run
      shell: bash
    - name: Install Stencil ${{matrix.stencil_version}}
      run: npm install --save-dev @stencil/core@${{matrix.stencil_version}}
      shell: bash
      if: ${{ matrix.stencil_version != 'DEFAULT' }}
    - name: Report Stencil Version
      run: npm ls @stencil/core
      shell: bash
    - name: Build
      run: npm run build -- --ci
      shell: bash
    - name: Test
      run: npm run test.ci
      shell: bash
    - name: Create Symlink
      run: npm link
      shell: bash
    - name: Enter test-app Directory
      run: cd test-app
      shell: bash
    - name: Install test-app Dependencies
      run: npm install
      shell: bash
    - name: Link Stencil Store
      run: npm link @stencil/store
    - name: Build test-app
      run: npm run build -- --ci
      shell: bash
    - name: Test test-app
      run: npm test
      shell: bash
